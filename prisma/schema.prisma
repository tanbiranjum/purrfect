// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  favoriteIds   String[]  @db.ObjectId

  accounts             Account[]
  Pet                  Pet[]
  AddoptionApplication AdoptionApplication[]
  AdoptionHistory      AdoptionHistory[]
  AdoptionRequest      AdoptionRequest[]
}

model Account {
  id                       String  @id @default(auto()) @map("_id") @db.ObjectId
  userId                   String  @db.ObjectId
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? @db.String
  refresh_token_expires_in Int?
  access_token             String  @db.String
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.String
  session_state            String?
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Pet {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String?
  age         Int
  category    String
  gender      String
  imageSrc    String?
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  ownerId String? @db.ObjectId
  owner   User?   @relation(fields: [ownerId], references: [id], onDelete: Cascade)

  AdoptionApplication AdoptionApplication?
}

model AdoptionApplication {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String?
  email     String?
  phone     String?
  adopted   Boolean  @default(false)
  address   Address  @relation(fields: [addressId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  pet       Pet      @relation(fields: [petId], references: [id], onDelete: Cascade)
  petId     String   @unique @db.ObjectId

  applicant       User              @relation(fields: [applicantId], references: [id])
  applicantId     String            @db.ObjectId
  addressId       String            @db.ObjectId
  AdoptionHistory AdoptionHistory[]
  AdoptionRequest AdoptionRequest[]
}

model AdoptionRequest {
  id                    String               @id @default(auto()) @map("_id") @db.ObjectId
  name                  String?
  email                 String?
  phone                 String?
  message               String?
  createdAt             DateTime             @default(now())
  updatedAt             DateTime             @updatedAt
  accepted              Boolean              @default(false)
  adoptionApplication   AdoptionApplication? @relation(fields: [adoptionApplicationId], references: [id])
  adoptionApplicationId String?              @unique @db.ObjectId

  applicant       User             @relation(fields: [applicantId], references: [id])
  applicantId     String           @unique @db.ObjectId
  addressId       String           @db.ObjectId
  address         Address          @relation(fields: [addressId], references: [id])
  AdoptionHistory AdoptionHistory?
}

model AdoptionHistory {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  adopted   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  adoptionRequest   AdoptionRequest? @relation(fields: [adoptionRequestId], references: [id])
  adoptionRequestId String?          @unique @db.ObjectId

  adoptionApplicationId String?              @db.ObjectId
  adoptionApplication   AdoptionApplication? @relation(fields: [adoptionApplicationId], references: [id])

  adoptedBy   User   @relation(fields: [adoptedById], references: [id])
  adoptedById String @db.ObjectId
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Address {
  id                  String                @id @default(auto()) @map("_id") @db.ObjectId
  address             String
  lon                 Float
  lat                 Float
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  AdoptionApplication AdoptionApplication[]
  AdoptionRequest     AdoptionRequest[]
}
